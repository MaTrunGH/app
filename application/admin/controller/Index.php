<?php
namespace app\admin\controller;
use app\admin\controller\Base;
use app\admin\model\DContr;
use think\Request;
use app\admin\model\DRegion;

class Index extends Base{

    protected $model;
    protected $request;
    protected $param;

    protected $beforeActionList = [
        'permission' => ['except' => 'index']
    ];

    protected function permission(){
        parent::permission(); // TODO: Change the autogenerated stub
        $this->param = $this->request->param();
        $this->model = new DContr($this->ad_uid);
    }

    public function index(){
    	// $this->view->engine(false);
      	return $this->fetch();
    }

    public function iframe(){
        if ($this->ad_uid == 1) {
            $province = db('d_plc')->alias('p')->field('p.province as id,r.shortname as title')->distinct(true)->join('d_region r', 'r.id = p.province', 'left')->select();
            $data = $province;
            if ($data) {
                foreach ($data as $pk => $pv) {
                    $city = db('d_plc')->alias('p')->field('p.city as id,r.pid,r.shortname as title')->where('r.pid', $pv['id'])->distinct(true)->join('d_region r', 'r.id = p.city', 'left')->select();
                    $cn = 0;
                    foreach ($city as $ck => $cv) {
                        if ($cv['pid'] == $pv['id']) {
                            $data[$pk]['children'][$cn] = $city[$ck];
                            $area = db('d_plc')->alias('p')->field('p.area as id,r.pid,r.shortname as title,p.plc_id,p.lon,p.lat')->distinct(true)->join('d_region r', 'r.id = p.area', 'left')->select();
                            $an = 0;
                            foreach ($area as $ak => $av) {
                                if ($av['pid'] == $cv['id']) {
                                    $data[$pk]['children'][$cn]['children'][$an] = $area[$ak];
                                    $region   = db('d_plc')->alias('p')->field('p.region as id,r.pid,r.shortname as title,p.plc_id,p.lon,p.lat')->distinct(true)->join('d_region r', 'r.id = p.region', 'left')->select();
                                    $rn = 0;
                                    foreach ($region as $rk => $rv) {
                                        if ($rv['id'] && $rv['pid'] == $av['id']) {
                                            $data[$pk]['children'][$cn]['children'][$an]['children'][$rn] = $region[$rk];
                                            ++$rn;
                                        }
                                    }
                                ++$an;
                                }
                            }
                        ++$cn;
                        }
                    }
                }
            }
        }else{
            $province = db('d_plc')->alias('p')->field('p.province as id,r.shortname as title')->distinct(true)->join('d_region r', 'r.id = p.province', 'left')->select();
            $data = $province;
            if ($data) {
            $user_region = db('u_user')->field('region_id,region_level')->where(['id' => $this->ad_uid, 'status' => 0])->find();
            if ($user_region) {
                foreach ($data as $pk => $pv) {
                    switch ($user_region['region_level']) {
                        case 2:
                            $city = db('d_plc')->alias('p')->field('p.city as id,r.pid,r.shortname as title')->where(['r.pid' => $pv['id'], 'p.city' => $user_region['region_id']])->distinct(true)->join('d_region r', 'r.id = p.city', 'left')->select();
                            break;
                        
                        case 3:
                            $city = db('d_plc')->alias('p')->field('p.city as id,r.pid,r.shortname as title')->where(['r.pid' => $pv['id'], 'p.area' => $user_region['region_id']])->distinct(true)->join('d_region r', 'r.id = p.city', 'left')->select();
                            break;

                        case 4:
                            $city = db('d_plc')->alias('p')->field('p.city as id,r.pid,r.shortname as title')->where(['r.pid' => $pv['id'], 'p.area' => $user_region['region_id']])->distinct(true)->join('d_region r', 'r.id = p.city', 'left')->select();
                            break;
                    }
                    
                    $cn = 0;
                    foreach ($city as $ck => $cv) {
                        if ($cv['pid'] == $pv['id']) {
                            $data[$pk]['children'][$cn] = $city[$ck];
                            $area = db('d_plc')->alias('p')->field('p.area as id,r.pid,r.shortname as title,p.plc_id,p.lon,p.lat')->distinct(true)->join('d_region r', 'r.id = p.area', 'left')->select();
                            $an = 0;
                            foreach ($area as $ak => $av) {
                                if ($av['pid'] == $cv['id']) {
                                    $data[$pk]['children'][$cn]['children'][$an] = $area[$ak];
                                    $region   = db('d_plc')->alias('p')->field('p.region as id,r.pid,r.shortname as title,p.plc_id,p.lon,p.lat')->distinct(true)->join('d_region r', 'r.id = p.region', 'left')->select();
                                    $rn = 0;
                                    foreach ($region as $rk => $rv) {
                                        if ($rv['id'] && $rv['pid'] == $av['id']) {
                                            $data[$pk]['children'][$cn]['children'][$an]['children'][$rn] = $region[$rk];
                                            ++$rn;
                                        }
                                    }
                                ++$an;
                                }
                            }
                        ++$cn;
                        }
                    }
                }
            }
        }
    }
        $this->assign('region_info', json_encode($data));
        $this->view->engine(false);
        return $this->fetch();
}

    public function test(){
        $this->view->engine(false);
        return $this->fetch();
    }
    
}
